name: Build and deploy

on:
  workflow_dispatch:
  push:
    branches:
      - develop
  release:
    types: [created]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        java: [ 8.0.162, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17-ea]
        os: [ubuntu-18.04, windows-2019, macos-10.15]
    name:  Test JDK ${{ matrix.java }}, ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml', '.github/workflows/pr.yml') }}
        restore-keys: ${{ runner.os }}-maven
    - name: Build with Maven
      run: mvn -B clean package --file pom.xml -U -P ci -Dmaven.wagon.http.retryHandler.count=3
      if: matrix.os != 'windows-2019'
    - name: Build with Maven
      run: mvn -B clean package --file pom.xml -U -P ci '-Dmaven.wagon.http.retryHandler.count=3'
      if: matrix.os == 'windows-2019'
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Set up Java for publishing to Maven Central Repository
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: sonatype-nexus-snapshots
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.SIGNING_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: GPG user IDs
        run: |
          echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
          echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
          echo "name:        ${{ steps.import_gpg.outputs.name }}"
          echo "email:       ${{ steps.import_gpg.outputs.email }}"
      - name: Publish to the Maven Central Repository
        run: mvn -P sonatype,ci -B deploy -Dmaven.wagon.http.retryHandler.count=3
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      - name: Set up Java for publishing to GitHub Packages
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Publish to GitHub Packages
        run: mvn -P github,ci -B clean deploy -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3 -X
        env:
          GITHUB_TOKEN: ${{ github.token }}
